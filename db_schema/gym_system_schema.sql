-- MySQL Script generated by MySQL Workbench
-- Fri 29 Sep 2017 10:22:13 PM CDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema GymSystem
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema GymSystem
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `GymSystem` DEFAULT CHARACTER SET utf8 ;
USE `GymSystem` ;

-- -----------------------------------------------------
-- Table `GymSystem`.`user_level`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`user_level` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`user_level` (
  `id` INT UNSIGNED NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `description_UNIQUE` (`description` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`user` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(16) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `user_level_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `user_level_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  INDEX `fk_user_user_level1_idx` (`user_level_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_user_user_level1`
    FOREIGN KEY (`user_level_id`)
    REFERENCES `GymSystem`.`user_level` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`health_insurance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`health_insurance` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`health_insurance` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `description_UNIQUE` (`description` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`personal_information`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`personal_information` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`personal_information` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `phone_number` VARCHAR(45) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `health_insurance_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `health_insurance_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_personal_information_health_insurance1_idx` (`health_insurance_id` ASC),
  CONSTRAINT `fk_personal_information_health_insurance1`
    FOREIGN KEY (`health_insurance_id`)
    REFERENCES `GymSystem`.`health_insurance` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`manager` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`manager` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `personal_information_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `personal_information_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_manager_user1_idx` (`user_id` ASC),
  INDEX `fk_manager_personal_information1_idx` (`personal_information_id` ASC),
  CONSTRAINT `fk_manager_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `GymSystem`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_manager_personal_information1`
    FOREIGN KEY (`personal_information_id`)
    REFERENCES `GymSystem`.`personal_information` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`trainer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`trainer` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`trainer` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `personal_information_id` INT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `personal_information_id`, `user_id`),
  INDEX `fk_trainer_personal_information1_idx` (`personal_information_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_trainer_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_trainer_personal_information1`
    FOREIGN KEY (`personal_information_id`)
    REFERENCES `GymSystem`.`personal_information` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_trainer_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `GymSystem`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`membership`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`membership` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`membership` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idmembership_UNIQUE` (`id` ASC),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`customer` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`customer` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `membership_id` INT UNSIGNED NOT NULL,
  `personal_information_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `membership_id`, `personal_information_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_customer_membership1_idx` (`membership_id` ASC),
  CONSTRAINT `fk_customer_personal_information1`
    FOREIGN KEY (`personal_information_id`)
    REFERENCES `GymSystem`.`personal_information` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_membership1`
    FOREIGN KEY (`membership_id`)
    REFERENCES `GymSystem`.`membership` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`work_information`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`work_information` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`work_information` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `start_date_time` DATETIME(5) NOT NULL,
  `end_date_time` DATETIME(5) NOT NULL,
  `trainer_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `trainer_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_work_information_trainer1_idx` (`trainer_id` ASC),
  CONSTRAINT `fk_work_information_trainer1`
    FOREIGN KEY (`trainer_id`)
    REFERENCES `GymSystem`.`trainer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`qualifications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`qualifications` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`qualifications` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`work_schedule_qualifications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`work_schedule_qualifications` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`work_schedule_qualifications` (
  `work_schedule_id` INT UNSIGNED NOT NULL,
  `qualifications_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`work_schedule_id`, `qualifications_id`),
  INDEX `fk_work_schedule_has_qualifications_qualifications1_idx` (`qualifications_id` ASC),
  INDEX `fk_work_schedule_has_qualifications_work_schedule1_idx` (`work_schedule_id` ASC),
  CONSTRAINT `fk_work_schedule_has_qualifications_work_schedule1`
    FOREIGN KEY (`work_schedule_id`)
    REFERENCES `GymSystem`.`work_information` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_work_schedule_has_qualifications_qualifications1`
    FOREIGN KEY (`qualifications_id`)
    REFERENCES `GymSystem`.`qualifications` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`machine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`machine` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`machine` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `picture_location` VARCHAR(255) NOT NULL,
  `quantity` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`duration`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`duration` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`duration` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `hours` INT UNSIGNED NOT NULL,
  `minutes` INT UNSIGNED NOT NULL,
  `seconds` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `hours_UNIQUE` (`hours` ASC),
  UNIQUE INDEX `seconds_UNIQUE` (`seconds` ASC),
  UNIQUE INDEX `minutes_UNIQUE` (`minutes` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`exercise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`exercise` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`exercise` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `picture_location` VARCHAR(255) NOT NULL,
  `quantity` INT UNSIGNED NOT NULL,
  `machine_id` INT UNSIGNED NOT NULL,
  `duration_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `machine_id`, `duration_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `fk_exercise_machine1_idx` (`machine_id` ASC),
  INDEX `fk_exercise_duration1_idx` (`duration_id` ASC),
  CONSTRAINT `fk_exercise_machine1`
    FOREIGN KEY (`machine_id`)
    REFERENCES `GymSystem`.`machine` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_exercise_duration1`
    FOREIGN KEY (`duration_id`)
    REFERENCES `GymSystem`.`duration` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`set`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`set` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`set` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `repetitions` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `number_of_reps_UNIQUE` (`repetitions` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`exercise_set`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`exercise_set` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`exercise_set` (
  `exercise_id` INT UNSIGNED NOT NULL,
  `set_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`exercise_id`, `set_id`),
  INDEX `fk_exercise_has_set_set1_idx` (`set_id` ASC),
  INDEX `fk_exercise_has_set_exercise1_idx` (`exercise_id` ASC),
  CONSTRAINT `fk_exercise_has_set_exercise1`
    FOREIGN KEY (`exercise_id`)
    REFERENCES `GymSystem`.`exercise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_exercise_has_set_set1`
    FOREIGN KEY (`set_id`)
    REFERENCES `GymSystem`.`set` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`workout_routine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`workout_routine` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`workout_routine` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `trainer_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `trainer_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `fk_workout_routine_trainer1_idx` (`trainer_id` ASC),
  CONSTRAINT `fk_workout_routine_trainer1`
    FOREIGN KEY (`trainer_id`)
    REFERENCES `GymSystem`.`trainer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`workout_routine_exercise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`workout_routine_exercise` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`workout_routine_exercise` (
  `workout_routine_id` INT UNSIGNED NOT NULL,
  `exercise_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`workout_routine_id`, `exercise_id`),
  INDEX `fk_workout_routine_has_exercise_exercise1_idx` (`exercise_id` ASC),
  INDEX `fk_workout_routine_has_exercise_workout_routine1_idx` (`workout_routine_id` ASC),
  CONSTRAINT `fk_workout_routine_has_exercise_workout_routine1`
    FOREIGN KEY (`workout_routine_id`)
    REFERENCES `GymSystem`.`workout_routine` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_workout_routine_has_exercise_exercise1`
    FOREIGN KEY (`exercise_id`)
    REFERENCES `GymSystem`.`exercise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymSystem`.`customer_workout_routine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymSystem`.`customer_workout_routine` ;

CREATE TABLE IF NOT EXISTS `GymSystem`.`customer_workout_routine` (
  `customer_membership_id` INT UNSIGNED NOT NULL,
  `workout_routine_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`customer_membership_id`, `workout_routine_id`),
  INDEX `fk_customer_has_workout_routine_workout_routine1_idx` (`workout_routine_id` ASC),
  INDEX `fk_customer_has_workout_routine_customer1_idx` (`customer_membership_id` ASC),
  CONSTRAINT `fk_customer_has_workout_routine_customer1`
    FOREIGN KEY (`customer_membership_id`)
    REFERENCES `GymSystem`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_has_workout_routine_workout_routine1`
    FOREIGN KEY (`workout_routine_id`)
    REFERENCES `GymSystem`.`workout_routine` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `GymSystem`.`user_level`
-- -----------------------------------------------------
START TRANSACTION;
USE `GymSystem`;
INSERT INTO `GymSystem`.`user_level` (`id`, `description`) VALUES (1, 'ADMIN');
INSERT INTO `GymSystem`.`user_level` (`id`, `description`) VALUES (2, 'MANAGER');
INSERT INTO `GymSystem`.`user_level` (`id`, `description`) VALUES (3, 'TRAINER');
INSERT INTO `GymSystem`.`user_level` (`id`, `description`) VALUES (4, 'CUSTOMER');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GymSystem`.`user`
-- -----------------------------------------------------
START TRANSACTION;
USE `GymSystem`;
INSERT INTO `GymSystem`.`user` (`id`, `username`, `password`, `user_level_id`) VALUES (1, 'admin', 'password', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `GymSystem`.`membership`
-- -----------------------------------------------------
START TRANSACTION;
USE `GymSystem`;
INSERT INTO `GymSystem`.`membership` (`id`, `type`) VALUES (1, 'ACTIVE');
INSERT INTO `GymSystem`.`membership` (`id`, `type`) VALUES (2, 'INACTIVE');

COMMIT;

