apply plugin: "java"

/* Uncomment and set mainClassName is main class exists for jar */
//apply plugin: "application"
//mainClassName = "HelloWorld"

/* Gets the version name from the latest Git tag (ex: major.minor.patch) */
def getVersionName = { ->
	def stdout = new ByteArrayOutputStream()
	try {
		exec {
			commandLine 'git', 'describe', '--tags'
			standardOutput = stdout
		}
	}
	catch(Exception e) {
		exec {
			commandLine 'git', 'rev-parse', '--short', 'HEAD'
			standardOutput = stdout
		}
	}
	return stdout.toString().trim()
}
version = getVersionName()

/* Uncomment and set archivesBaseName to override the default naming for jar file */
//archivesBaseName = "HelloWorld"

jar {
	manifest {
		/* Uncomment to define additional attributes for the jar file */
		//attributes("Main-Class": mainClassName)
	}
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile "junit:junit:4.11"
}

test {
    testLogging {
    	// Display full event excepts
    	exceptionFormat  = "FULL"
    
    	// Log the following events
    	events = ["FAILED", "PASSED", "SKIPPED"]
    	
    	// Only display output/error for the following events
    	info.events = ["FAILED", "SKIPPED"]
    }
}